{"version":3,"sources":["components/Map.js","components/Geocoder.js","components/Sidebar.js","components/SidebarToggler.js","App.js","index.js"],"names":["mapboxgl","require","MapboxGeocoder","Map","accessToken","config","geojson","map","features","forEach","marker","Marker","setLngLat","geometry","coordinates","addTo","type","properties","title","description","this","createMap","container","style","center","pitch","bearing","zoom","createMarkers","initGeoJson","geocoder","placeholder","proximity","latitude","longitude","bbox","limit","document","getElementById","appendChild","onAdd","id","React","Component","Geocoder","Sidebar","props","className","isSidebarCollapsed","SidebarToggler","onClick","toggleSidebar","icon","library","add","faToggleOn","faToggleOff","App","state","bind","setState","prevState","ReactDOM","render"],"mappings":"wSACMA,EAAWC,EAAQ,IACnBC,EAAiBD,EAAQ,IAmHhBE,E,kLA/GHC,EAAaC,GAErB,OADAL,EAASI,YAAcA,EAChB,IAAIJ,EAASG,IAAIE,K,oCAGZC,EAASC,GACrBD,EAAQE,SAASC,QAAQ,SAASC,IAChC,IAAIV,EAASW,QAASC,UAAUF,EAAOG,SAASC,aAAaC,MAAMR,O,oCAKrE,MAAO,CACLS,KAAM,oBACNR,SAAU,CACR,CACEQ,KAAM,UACNH,SAAU,CACRG,KAAM,QACNF,YAAa,EAAE,WAAY,YAE7BG,WAAY,CACVC,MAAO,SACPC,YACE,iEAGN,CACEH,KAAM,UACNH,SAAU,CACRG,KAAM,QACNF,YAAa,EAAE,WAAY,YAE7BG,WAAY,CACVC,MAAO,SACPC,YACE,0EAGN,CACEH,KAAM,UACNH,SAAU,CACRG,KAAM,QACNF,YAAa,EAAE,WAAY,YAE7BG,WAAY,CACVC,MAAO,SACPC,YAAa,yDAGjB,CACEH,KAAM,UACNH,SAAU,CACRG,KAAM,QACNF,YAAa,EAAE,WAAY,YAE7BG,WAAY,CACVC,MAAO,SACPC,YAAa,qDAGjB,CACEH,KAAM,UACNH,SAAU,CACRG,KAAM,QACNF,YAAa,EAAE,WAAY,YAE7BG,WAAY,CACVC,MAAO,SACPC,YAAa,kE,0CAQrB,IAAMZ,EAAMa,KAAKC,UACf,+FACA,CACEC,UAAW,gBACXC,MAAO,qDACPC,OAAQ,EAAE,WAAY,WACtBC,MAAO,GACPC,SAAU,KACVC,KAAM,KAGVP,KAAKQ,cAAcR,KAAKS,cAAetB,GAEvC,IAAMuB,EAAW,IAAI5B,EAAe,CAClCE,YAAaJ,EAASI,YACtBJ,SAAUA,EACVU,QAAQ,EACRqB,YAAa,oCACbC,UAAW,CACTC,UAAW,UACXC,WAAY,WAEdC,KAAM,EAAE,oBAAoB,mBAAmB,mBAAmB,oBAClEC,MAAO,IAGTC,SAASC,eAAe,YAAYC,YAAYT,EAASU,MAAMjC,M,+BAI/D,OAAO,yBAAKkC,GAAG,sB,GA7GDC,IAAMC,WCETC,EAJE,WACb,OAAO,yBAAKH,GAAG,cCKJI,EALC,SAAAC,GACZ,OAAO,yBAAKC,UAAS,kBAAaD,EAAME,oBAAsB,aAC1D,kBAAC,EAAD,Q,QCIOC,EANQ,SAAAH,GACnB,OAAO,yBAAKC,UAAU,iCAAiCG,QAASJ,EAAMK,eACjEL,EAAME,mBAAqB,kBAAC,IAAD,CAAiBI,KAAK,eAAiB,kBAAC,IAAD,CAAiBA,KAAK,gB,aCMjGC,EAAQC,IAAIC,IAAYC,K,IAiCTC,E,YA9Bb,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,CACXV,oBAAoB,GAEtB,EAAKG,cAAgB,EAAKA,cAAcQ,KAAnB,gBALJ,E,6EASjBvC,KAAKwC,SAAS,SAAAC,GACZ,MAAO,CACLb,oBAAqBa,EAAUb,wB,+BAMnC,OACE,6BACE,kBAAC,EAAD,CAASA,mBAAoB5B,KAAKsC,MAAMV,qBACxC,kBAAC,EAAD,CACEA,mBAAoB5B,KAAKsC,MAAMV,mBAC/BG,cAAe/B,KAAK+B,gBAEtB,kBAAC,EAAD,W,GAzBUT,IAAMC,W,YCPxBmB,IAASC,OAAO,kBAAC,EAAD,MAAS1B,SAASC,eAAe,W","file":"static/js/main.0127f90e.chunk.js","sourcesContent":["import React from \"react\";\nconst mapboxgl = require(\"mapbox-gl/dist/mapbox-gl.js\");\nconst MapboxGeocoder = require(\"@mapbox/mapbox-gl-geocoder\");\n\nclass Map extends React.Component {\n\n  createMap(accessToken, config) {\n    mapboxgl.accessToken = accessToken;\n    return new mapboxgl.Map(config);\n  }\n\n  createMarkers(geojson, map) {\n    geojson.features.forEach(function(marker) {\n      new mapboxgl.Marker().setLngLat(marker.geometry.coordinates).addTo(map);\n    });\n  }\n\n  initGeoJson() {\n    return {\n      type: \"FeatureCollection\",\n      features: [\n        {\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [-46.476616, -23.978113]\n          },\n          properties: {\n            title: \"Mapbox\",\n            description:\n              \"Rua Eduardo Cacao, Jardim Rio Branco, Sao Vicente, Sao Paulo\"\n          }\n        },\n        {\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [-46.466608, -23.984892]\n          },\n          properties: {\n            title: \"Mapbox\",\n            description:\n              \"Supermercado Mini Preço, Jardim Rio Branco, Sao Vicente, Sao Paulo\"\n          }\n        },\n        {\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [-46.386018, -23.970975]\n          },\n          properties: {\n            title: \"Mapbox\",\n            description: \"Biquinha de Anchieta, Centro, Sao Vicente, Sao Paulo\"\n          }\n        },\n        {\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [-46.370849, -23.977406]\n          },\n          properties: {\n            title: \"Mapbox\",\n            description: \"Ilha Porchat, Itararé, Sao Vicente, Sao Paulo\"\n          }\n        },\n        {\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: [-46.350136, -23.971674]\n          },\n          properties: {\n            title: \"Mapbox\",\n            description: \"Emissário Submarino, José Menino, Santos, Sao Paulo\"\n          }\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    const map = this.createMap(\n      \"pk.eyJ1IjoicmVlZGxleDk4IiwiYSI6ImNqemhuZnJhdjA4M3kzaHFhMTB3dXR1aGkifQ.rMB3AI-KMw89KBRt2Q6KqQ\",\n      {\n        container: \"map-container\", // HTML container id\n        style: \"mapbox://styles/mapbox/navigation-preview-night-v2\", // style URL\n        center: [-46.476616, -23.978113], // starting position as [lng, lat]\n        pitch: 85,\n        bearing: -27.6,\n        zoom: 13\n      }\n    );\n    this.createMarkers(this.initGeoJson(), map);\n\n    const geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl: mapboxgl,\n      marker: true,\n      placeholder: 'Search for a place in Sao Vicente',\n      proximity: {\n        latitude: -23.978113,\n        longitude: -46.476616\n      },\n      bbox: [-46.650268293716294,-24.00971344305148,-46.35592184956596,-23.898951151178693],\n      limit: 5\n    });\n    \n    document.getElementById(\"geocoder\").appendChild(geocoder.onAdd(map));\n  }\n\n  render() {\n    return <div id=\"map-container\" />;\n  }\n}\n\nexport default Map;\n","import React from 'react'\n\nconst Geocoder = () => {\n    return <div id=\"geocoder\"/>\n}\n\nexport default Geocoder","import React from 'react'\nimport Geocoder from './Geocoder'\n\nconst Sidebar = props =>   {\n    return <div className={`sidebar ${props.isSidebarCollapsed && 'collapse'}`}>\n        <Geocoder/>\n    </div>\n}\nexport default Sidebar","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst SidebarToggler = props => {\n    return <div className='rounded-button sidebar-toggler' onClick={props.toggleSidebar}>\n        {props.isSidebarCollapsed ? <FontAwesomeIcon icon='toggle-off'/> : <FontAwesomeIcon icon='toggle-on'/>}\n    </div>\n}\n\nexport default SidebarToggler","import React from \"react\";\nimport Map from \"./components/Map\";\n// import MapContainer from \"./components/MapContainer\";\nimport Sidebar from \"./components/Sidebar\";\nimport SidebarToggler from \"./components/SidebarToggler\";\n\nimport { faToggleOn } from \"@fortawesome/free-solid-svg-icons\";\nimport { faToggleOff } from \"@fortawesome/free-solid-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\n\nlibrary.add(faToggleOn, faToggleOff);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSidebarCollapsed: false\n    };\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n  }\n\n  toggleSidebar() {\n    this.setState(prevState => {\n      return {\n        isSidebarCollapsed: !prevState.isSidebarCollapsed\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Sidebar isSidebarCollapsed={this.state.isSidebarCollapsed} />\n        <SidebarToggler\n          isSidebarCollapsed={this.state.isSidebarCollapsed}\n          toggleSidebar={this.toggleSidebar}\n        />\n        <Map/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss'\nimport '../node_modules/mapbox-gl/dist/mapbox-gl.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}