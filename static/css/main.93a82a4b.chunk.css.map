{"version":3,"sources":["components/_Map.scss","components/_Sidebar.scss","../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","components/_SidebarToggler.scss","components/_Filter.scss","components/_Marker.scss","index.scss"],"names":[],"mappings":"AAAA,eACI,YAAa,CACb,WAAY,CACZ,qBAAuB,CACvB,SAAU,CCJd,SACE,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,eAAgB,CAahB,wBAAwB,CACxB,gCAAsC,CACtC,SAAU,CACV,wDAAwD,CAAxD,gDAAwD,CC4CtD,0BDhEJ,SAMI,WAAY,CACZ,YAAa,CACb,qBAAsB,CACtB,sBAAuB,CAY1B,CC2CG,0BDhEJ,SAYI,UAAW,CACX,WAAY,CACZ,kBAAmB,CACnB,6BACF,CAKD,CAED,kBACE,OAAQ,CACR,eAAgB,CEzBlB,iBACE,aAAc,CACd,iBAAkB,CAClB,YAAa,CACb,wBAAwB,CACxB,iCAAsC,CACtC,2BAAgC,CAChC,cAAe,CACf,iBAAkB,CAClB,SAAU,CACV,SAAU,CACV,WAAY,CDqDV,0BChEJ,iBAaI,UAAW,CAEd,CAED,8BACE,eAAiB,CACjB,WAAY,CACZ,WAAY,CACZ,UAAW,CACX,gBAAiB,CACjB,kBAAmB,CACnB,gCAAsC,CACtC,iBAAkB,CAClB,qBAAsB,CC1BxB,QACE,SAAU,CACV,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CAJrB,4BAOI,+BAAsC,CACtC,uDAAsD,CAAtD,+CAAsD,CAR1D,cAWI,YAAa,CACb,SAAU,CACV,aAAgB,CAChB,WAAY,CACZ,qBAA+B,CAfnC,WAkBI,eAAgB,CAEhB,SAAU,CACV,QAAS,CACT,YAAa,CACb,WAAY,CAQZ,iBAAkB,CA/BtB,cAyBM,0CAA0C,CAC1C,YAAa,CA1BnB,oBA6BM,gCAAsC,CA7B5C,8BAkCI,iBAAmB,CF8BnB,0BEhEJ,QAqCI,YAAa,CACb,qBAAsB,CACtB,sBAAuB,CACvB,kBAAmB,CAxCvB,aA0CQ,YAAa,CA1CrB,WA6CM,WAAY,CACZ,SAAU,CA9ChB,4BAoDQ,YAAa,CAChB,CFWD,0BEPF,oBACE,4BAA6B,CAC7B,WAAY,CACb,CC5DH,QACE,wmRAA+C,CAC/C,mBAAoB,CACpB,2BAA4B,CAC5B,UAAW,CACX,WAAY,CACZ,wDAAwD,CAAxD,gDAAwD,CACxD,cAAe,CAEjB,cACE,WAAY,CACZ,UAAW,CAEb,gBACE,eAAgB,CAGlB,oBACE,YAAa,CAGf,wBACE,iBAAkB,CAClB,0CAA8D,CAC9D,4BAA8B,CAC9B,sBAAwB,CACxB,UAAY,CACZ,gCAAoC,CCjBtC,EACI,uGACJ,CAEA,KACI,QAAS,CACT,SAAU,CACV,eAAgB","file":"main.93a82a4b.chunk.css","sourcesContent":["#map-container{\n    height: 100vh;\n    width: 100vw;\n    border: 1px solid black;\n    z-index: 1;\n}",".sidebar {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  @include breakpoint(min-width $breakpoint-desktop) {\n    width: 400px;\n    height: 100vh;\n    flex-direction: column;\n    justify-content: center;\n  }\n  @include breakpoint(max-width $breakpoint-desktop) {\n    width: 100%;\n    height: 75px;\n    flex-direction: row;\n    justify-content: space-between\n  }\n  color: rgba($color: #fff, $alpha: 0.7);\n  background-color: rgba($color: #001500, $alpha: 0.5);\n  z-index: 2;\n  transition: all 0.1s cubic-bezier(0.075, 0.82, 0.165, 1);\n}\n\n.sidebar.collapse {\n  width: 0;\n  overflow: hidden;\n}\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n",".sidebar-toggler {\n  font-size: 3em;\n  border-radius: 20%;\n  padding: 10px;\n  color: rgba($color: #fff, $alpha: 0.9);\n  background-color: rgba($color: #002200, $alpha: 0.65);\n  box-shadow: 0 0 50px forestgreen;\n  cursor: pointer;\n  position: absolute;\n  z-index: 2;\n  right: 40%;\n  bottom: 25px;\n  @include breakpoint(min-width $breakpoint-desktop) {\n    right: 25px;\n  }\n}\n\n.sidebar-toggler:hover::before {\n  font-size: 0.25em;\n  bottom: 80px;\n  right: -15px;\n  width: 80px;\n  padding: 5px 10px;\n  border-radius: 10px;\n  background-color: rgba($color: #000100, $alpha: 0.85);\n  position: absolute;\n  content: \"Toggle Menu\";\n}\n",".filter {\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  input,\n  ul li {\n    background-color: rgba($color: #000000, $alpha: 0.7);\n    transition: all 1s cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n  input {\n    padding: 20px;\n    width: 85%;\n    color: lightgray;\n    border: none;\n    outline-color: rgb(80, 206, 80);\n  }\n  ul {\n    list-style: none;\n    margin-top: 15px;\n    padding: 0;\n    margin: 0;\n    height: 400px;\n    width: 350px;\n    li {\n      border-bottom: 1px solid rgba($color: #fff, $alpha: 0.2);\n      padding: 15px;\n    }\n    li:hover {\n      background-color: rgba($color: #000000, $alpha: 0.95);\n    }\n    overflow-y: scroll;\n  }\n  ul::-webkit-scrollbar {\n    width: 0 !important;\n  }\n  @include breakpoint(max-width $breakpoint-desktop) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    .tip{\n        display: none;\n    }\n    ul {\n      height: 40px;\n      width: 80%;\n      li{\n          padding: 10px;\n      }\n    }\n    input{\n        padding: 10px;\n    }\n  }\n}\n@include breakpoint(min-width $breakpoint-desktop) {\n  .filter.filter-list {\n    justify-content: space-around;\n    height: 80vh;\n  }\n}\n",".marker {\n  background-image: url(\"../assets/position.png\");\n  background-size: 60%;\n  background-repeat: no-repeat;\n  width: 50px;\n  height: 50px;\n  transition: all 0.05s cubic-bezier(0.165, 0.84, 0.44, 1);\n  cursor: pointer;\n}\n.marker:hover {\n  height: 75px;\n  width: 75px;\n}\n.mapboxgl-popup {\n  max-width: 300px;\n}\n\n.mapboxgl-popup-tip {\n  display: none;\n}\n\n.mapboxgl-popup-content {\n  text-align: center;\n  background-color: rgba($color: #002200, $alpha: .5) !important;\n  border-radius: 15px !important;\n  padding: 25px !important;\n  color: white;\n  font-family: \"Open Sans\", sans-serif;\n}\n","\n@import 'breakpoint-sass';\n@import './components/Variables';\n@import './components/Map';\n@import './components/Sidebar';\n@import './components/SidebarToggler';\n@import './components/Filter';\n@import './components/Marker';\n\n\n*{\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\n}\n\nbody{\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}"]}